generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            String       @id @default(cuid())
  firstName     String
  lastName      String?
  image         String?
  email         String       @unique
  emailVerified Boolean      @default(false)
  username      String       @unique
  password      String?
  completed     Boolean      @default(false)
  collections   Collection[]
  likes         Like[]
  shares        Share[]
  comments      Comment[]
  items         Item[]
  deleted       Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Collection {
  id          String    @id @default(cuid())
  name        String
  description String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  likes       Like[]
  shares      Share[]
  comments    Comment[]
  items       Item[]
  published   Boolean   @default(true)
  private     Boolean   @default(false)
  deleted     Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
  @@fulltext([name])
}

model Like {
  id           String     @id @default(cuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String
  createdAt    DateTime   @default(now())

  @@index([userId, collectionId])
}

model Share {
  id           String     @id @default(cuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String
  createdAt    DateTime   @default(now())

  @@index([userId, collectionId])
}

model Comment {
  id           String     @id @default(cuid())
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String
  text         String
  deleted      Boolean    @default(false)
  createdAt    DateTime   @default(now())

  @@index([userId, collectionId])
}

model Item {
  id             String     @id @default(cuid())
  name           String
  make           String?
  description    String?
  price          Float?
  currency       String?
  images         Json?
  links          Json?
  recommendation Json?
  user           User       @relation(fields: [userId], references: [id])
  userId         String
  collection     Collection @relation(fields: [collectionId], references: [id])
  collectionId   String
  type           ItemType
  metadata       Json?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@index([userId, collectionId])
}

enum ItemType {
  Laptop
  Desktop
  Tablet
  Phone
  Keyboard
  Mouse
  Monitor
  Speakers
  Headphones
  Microphone
  Chair
  Desk
  Ide
  IdeTheme
  IdePlugin
  Terminal
  Browser
  Software
}
